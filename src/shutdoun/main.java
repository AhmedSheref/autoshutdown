/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shutdoun;

import java.awt.Toolkit;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author el3sass
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        count = new javax.swing.JRadioButton();
        time = new javax.swing.JRadioButton();
        bc = new javax.swing.JTextField();
        bt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        s = new javax.swing.JRadioButton();
        r = new javax.swing.JRadioButton();
        l = new javax.swing.JRadioButton();
        mm = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 0, 102));

        count.setBackground(new java.awt.Color(0, 0, 102));
        buttonGroup1.add(count);
        count.setForeground(new java.awt.Color(153, 204, 255));
        count.setText("by Countdown");
        count.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                countMouseClicked(evt);
            }
        });
        count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countActionPerformed(evt);
            }
        });

        time.setBackground(new java.awt.Color(0, 0, 102));
        buttonGroup1.add(time);
        time.setForeground(new java.awt.Color(153, 204, 255));
        time.setText("by time");
        time.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timeMouseClicked(evt);
            }
        });
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 102));
        jButton1.setText("GO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        s.setBackground(new java.awt.Color(0, 0, 102));
        buttonGroup2.add(s);
        s.setForeground(new java.awt.Color(153, 204, 255));
        s.setText("ShutDown");

        r.setBackground(new java.awt.Color(0, 0, 102));
        buttonGroup2.add(r);
        r.setForeground(new java.awt.Color(153, 204, 255));
        r.setText("Restart");

        l.setBackground(new java.awt.Color(0, 0, 102));
        buttonGroup2.add(l);
        l.setForeground(new java.awt.Color(153, 204, 255));
        l.setText("Sleep");

        mm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));
        mm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(r)
                                .addGap(134, 134, 134)
                                .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(s)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(count)
                            .addComponent(time))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(bt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bc))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bc, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(time)
                    .addComponent(bt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(s)
                    .addComponent(r)
                    .addComponent(l))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 204, 255));
        jLabel1.setText("Hi..select time to shut down:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 333, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 299, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void countActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countActionPerformed
       
    }//GEN-LAST:event_countActionPerformed

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
       
    }//GEN-LAST:event_timeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

       if (time.getText()==null||count.getText()==null)
           JOptionPane.showMessageDialog(null,"please set a time !");
       else if (!s.isSelected()&&!r.isSelected()&&!l.isSelected())
           JOptionPane.showMessageDialog(null, "please select \"ShutDown/Restart/Sleep\"..");
       else if(count.isSelected()){ 
       String waitmainutes="";
            waitmainutes=bc.getText();
            String shutdownCommand="shutdown.exe -s -t "+waitmainutes;
            String sleepCommand="Rundll32.exe powrprof.dll,SetSuspendState Sleep "+waitmainutes;
            String restartCommand="cmd /c shutdown -r "+waitmainutes;
            String realCommand = "";
            String operation="";
            if (s.isSelected())
            {  
                realCommand=shutdownCommand;
                operation+="ShutDown";
            }
            else if (r.isSelected())
            {
                realCommand=restartCommand;
                operation+="Restart";
            }else if(l.isSelected())
            {  
                realCommand=sleepCommand;
                operation+="Sleep";
            }
            JOptionPane.showMessageDialog(null,"your computer will "+operation+" after "+waitmainutes+" click ok to continue !");
           try {
               
               Thread.sleep(1000*60*Integer.parseInt(waitmainutes));
               Runtime.getRuntime().exec(realCommand);
           } catch (InterruptedException ex) {
               JOptionPane.showMessageDialog(null, "try again!");
           } catch (IOException ex) {
               JOptionPane.showMessageDialog(null, "try again!");
           }
            
        }
       else if(time.isSelected())
       {
           //JOptionPane.showMessageDialog(null,"please enter the time in \"HH:mm\"..");
          // bt.setText("HH:MM");
          int m = 0;
          int h = 0;
          boolean x=false;
           do{
           String time=bt.getText();
           String hours = "",minutes="";
           int z=time.length();
           for (int i=0;i<time.length();i++)
           {
               if (time.charAt(i)!=':')
               {
                 if (i<z)
                     hours+=time.charAt(i);
                 else if (i>z)
                     minutes+=time.charAt(i);
               }
               else if (time.charAt(i)==':')
                   z=i;
           }
            DateTimeFormatter hour = DateTimeFormatter.ofPattern("HH");
            LocalDateTime now = LocalDateTime.now();
            DateTimeFormatter minute = DateTimeFormatter.ofPattern("mm");
            int chour=Integer.parseInt(hour.format(now));
            int cminute=Integer.parseInt(minute.format(now));
            
            
            if (mm.getSelectedItem()=="PM")
            {
                h+=12;
            }
            if (Integer.parseInt(hours)+h==chour)
            {
                h+=Integer.parseInt(hours)-chour;
                m=Integer.parseInt(minutes)-cminute;
            }
            else if((Integer.parseInt(hours)+h > chour))
            {
               h+=(Integer.parseInt(hours)-1)-chour;
               m=(Integer.parseInt(minutes)+60)-cminute; 
            }
            else 
            {
                JOptionPane.showMessageDialog(null, "attintion please!..time must be later now! check\" AM/pm\"");
                x=true;
                bt.setText("");
            }}while(x==true);
            int wait_minutes=(h*60)+m;
            String shutdownCommand="shutdown.exe -s -t "+wait_minutes;
            String sleepCommand="Rundll32.exe powrprof.dll,SetSuspendState Sleep "+wait_minutes;
            String restartCommand="cmd /c shutdown -r "+wait_minutes;
            String realCommand = "";
            String operation="";
            if (s.isSelected())
            {  
                realCommand=shutdownCommand;
                operation+="ShutDown";
                
            }
            else if (r.isSelected())
            {
                realCommand=restartCommand;
                operation+="Restart";
                
            }else if(l.isSelected())
            {  
                realCommand=sleepCommand;
                operation+="Sleep";
                
            }
            JOptionPane.showMessageDialog(null,"your computer will "+operation+" after "+wait_minutes+" click ok to continue !");
             try {
               
               Thread.sleep(1000*60*wait_minutes);
               Runtime.getRuntime().exec(realCommand);
           } catch (InterruptedException ex) {
               JOptionPane.showMessageDialog(null, "try again!");
           } catch (IOException ex) {
               JOptionPane.showMessageDialog(null, "try again!");
           }
            
            
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void mmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmActionPerformed
        
    }//GEN-LAST:event_mmActionPerformed

    private void countMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_countMouseClicked
        if (count.isSelected())
            {
                bc.setEnabled(true);
                bt.setEnabled(false);
            }
    }//GEN-LAST:event_countMouseClicked

    private void timeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timeMouseClicked
        if(time.isSelected())
        {
             bt.setEnabled(true);
             bc.setEnabled(false);
        }
    }//GEN-LAST:event_timeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ImageIcon icon;
                main m =new main();
                icon=new ImageIcon("E:\\shutdoun\\src\\shutdoun\\Shut-Down-Setting-in-Windows-8.png");
                m.setIconImage(icon.getImage());
                m.setTitle("ShutDown Program : By Ahmed Sheref..");
                m.bc.setEnabled(false);
                m.bt.setEnabled(false);
                m.setLocationRelativeTo(null);
                m.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bc;
    private javax.swing.JTextField bt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton count;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton l;
    private javax.swing.JComboBox<String> mm;
    private javax.swing.JRadioButton r;
    private javax.swing.JRadioButton s;
    private javax.swing.JRadioButton time;
    // End of variables declaration//GEN-END:variables
}
